<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="class_bcrypt" kind="class" language="PHP" prot="public">
    <compoundname>Bcrypt</compoundname>
    <basecompoundref refid="class_prefab" prot="public" virt="non-virtual">Prefab</basecompoundref>
      <sectiondef kind="user-defined">
      <memberdef kind="variable" id="class_bcrypt_1a8713f533d972d7d3f0637941061f9b8a" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const E_CostArg</definition>
        <argsstring></argsstring>
        <name>E_CostArg</name>
        <initializer>=&apos;Invalid cost parameter&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" line="29" column="1" bodyfile="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_bcrypt_1aaea1f538f70ff2c05db136dd0fe74db4" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const E_SaltArg</definition>
        <argsstring></argsstring>
        <name>E_SaltArg</name>
        <initializer>=&apos;Salt must be at least 22 alphanumeric characters&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" line="30" column="1" bodyfile="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_bcrypt_1a086e0e15867645a7a8cf461bf8ce1e0c" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const COST</definition>
        <argsstring></argsstring>
        <name>COST</name>
        <initializer>=10</initializer>
        <briefdescription>
<para>Default cost. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" line="35" column="1" bodyfile="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_bcrypt_1a027c5d961c1d96ac0fa2a0fcc4af1e71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>hash</definition>
        <argsstring>($pw, $salt=NULL, $cost=self::COST)</argsstring>
        <name>hash</name>
        <param>
          <declname>$pw</declname>
        </param>
        <param>
          <declname>$salt</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <declname>$cost</declname>
          <defval>self::COST</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate bcrypt hash of string <simplesect kind="return"><para>string|FALSE </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$pw</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$salt</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$cost</parametername>
</parameternamelist>
<parameterdescription>
<para>int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" line="44" column="1" bodyfile="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" bodystart="44" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_bcrypt_1a426e49c6c92d63e97240374a30e44989" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>needs_rehash</definition>
        <argsstring>($hash, $cost=self::COST)</argsstring>
        <name>needs_rehash</name>
        <param>
          <declname>$hash</declname>
        </param>
        <param>
          <declname>$cost</declname>
          <defval>self::COST</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if password is still strong enough <simplesect kind="return"><para>bool </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$hash</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$cost</parametername>
</parameternamelist>
<parameterdescription>
<para>int </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" line="75" column="1" bodyfile="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_bcrypt_1a88aa522c359b8f4adff496b507df9864" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>verify</definition>
        <argsstring>($pw, $hash)</argsstring>
        <name>verify</name>
        <param>
          <declname>$pw</declname>
        </param>
        <param>
          <declname>$hash</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Verify password against hash using timing attack resistant approach <simplesect kind="return"><para>bool </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$pw</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$hash</parametername>
</parameternamelist>
<parameterdescription>
<para>string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" line="86" column="1" bodyfile="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" bodystart="86" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Lightweight password hashing library</para><para>Copyright (c) 2009-2016 F3::Factory/Bong Cosca, All rights reserved.</para><para>This file is part of the Fat-Free Framework (<ulink url="http://fatfreeframework.com">http://fatfreeframework.com</ulink>).</para><para>This is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or later.</para><para>Fat-Free Framework is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</para><para>You should have received a copy of the GNU General Public License along with Fat-Free Framework. If not, see <ulink url="http://www.gnu.org/licenses/">http://www.gnu.org/licenses/</ulink>.</para><para><xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>use <ulink url="http://php.net/manual/en/ref.password.php">http://php.net/manual/en/ref.password.php</ulink> instead (PHP 5.5+ only) </para></xrefdescription></xrefsect></para>    </detaileddescription>
    <inheritancegraph>
      <node id="20">
        <label>Bcrypt</label>
        <link refid="class_bcrypt"/>
        <childnode refid="21" relation="public-inheritance">
        </childnode>
      </node>
      <node id="21">
        <label>Prefab</label>
        <link refid="class_prefab"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="22">
        <label>Bcrypt</label>
        <link refid="class_bcrypt"/>
        <childnode refid="23" relation="public-inheritance">
        </childnode>
      </node>
      <node id="23">
        <label>Prefab</label>
        <link refid="class_prefab"/>
      </node>
    </collaborationgraph>
    <location file="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" line="25" column="1" bodyfile="/Users/aplennevaux/GITHUB/Visionary-website/src/vendor/bcosca/fatfree/lib/bcrypt.php" bodystart="25" bodyend="97"/>
    <listofallmembers>
      <member refid="class_bcrypt_1a086e0e15867645a7a8cf461bf8ce1e0c" prot="public" virt="non-virtual"><scope>Bcrypt</scope><name>COST</name></member>
      <member refid="class_bcrypt_1a8713f533d972d7d3f0637941061f9b8a" prot="public" virt="non-virtual"><scope>Bcrypt</scope><name>E_CostArg</name></member>
      <member refid="class_bcrypt_1aaea1f538f70ff2c05db136dd0fe74db4" prot="public" virt="non-virtual"><scope>Bcrypt</scope><name>E_SaltArg</name></member>
      <member refid="class_bcrypt_1a027c5d961c1d96ac0fa2a0fcc4af1e71" prot="public" virt="non-virtual"><scope>Bcrypt</scope><name>hash</name></member>
      <member refid="class_prefab_1a0deb004950b8dc4f51836316fd19c111" prot="public" virt="non-virtual"><scope>Bcrypt</scope><name>instance</name></member>
      <member refid="class_bcrypt_1a426e49c6c92d63e97240374a30e44989" prot="public" virt="non-virtual"><scope>Bcrypt</scope><name>needs_rehash</name></member>
      <member refid="class_bcrypt_1a88aa522c359b8f4adff496b507df9864" prot="public" virt="non-virtual"><scope>Bcrypt</scope><name>verify</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
