.TH "Base" 3 "Tue Jan 3 2017" "Version 3.6" "Fat-Free Framework" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Base \- \fBBase\fP structure\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBPrefab\fP, and ArrayAccess\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBsync\fP ($key)"
.br
.ti -1c
.RI "\fBbuild\fP ($url, $args=[])"
.br
.ti -1c
.RI "\fBalias\fP ($name, $params=[], $query=NULL)"
.br
.ti -1c
.RI "\fBparse\fP ($str)"
.br
.ti -1c
.RI "\fBcompile\fP ($str)"
.br
.ti -1c
.RI "& \fBref\fP ($key, $add=TRUE, &$var=NULL)"
.br
.ti -1c
.RI "\fBexists\fP ($key, &$val=NULL)"
.br
.ti -1c
.RI "\fBdevoid\fP ($key, &$val=NULL)"
.br
.ti -1c
.RI "\fBset\fP ($key, $val, $ttl=0)"
.br
.ti -1c
.RI "\fBget\fP ($key, $args=NULL)"
.br
.ti -1c
.RI "\fBclear\fP ($key)"
.br
.ti -1c
.RI "\fBchecked\fP ($key)"
.br
.ti -1c
.RI "\fBvisible\fP ($obj, $key)"
.br
.ti -1c
.RI "\fBmset\fP (array $vars, $prefix='', $ttl=0)"
.br
.ti -1c
.RI "\fBhive\fP ()"
.br
.ti -1c
.RI "\fBcopy\fP ($src, $dst)"
.br
.ti -1c
.RI "\fBconcat\fP ($key, $val)"
.br
.ti -1c
.RI "\fBflip\fP ($key)"
.br
.ti -1c
.RI "\fBpush\fP ($key, $val)"
.br
.ti -1c
.RI "\fBpop\fP ($key)"
.br
.ti -1c
.RI "\fBunshift\fP ($key, $val)"
.br
.ti -1c
.RI "\fBshift\fP ($key)"
.br
.ti -1c
.RI "\fBmerge\fP ($key, $src, $keep=FALSE)"
.br
.ti -1c
.RI "\fBextend\fP ($key, $src, $keep=FALSE)"
.br
.ti -1c
.RI "\fBfixslashes\fP ($str)"
.br
.ti -1c
.RI "\fBsplit\fP ($str, $noempty=TRUE)"
.br
.ti -1c
.RI "\fBstringify\fP ($arg, array $stack=NULL)"
.br
.ti -1c
.RI "\fBcsv\fP (array $args)"
.br
.ti -1c
.RI "\fBcamelcase\fP ($str)"
.br
.ti -1c
.RI "\fBsnakecase\fP ($str)"
.br
.ti -1c
.RI "\fBsign\fP ($num)"
.br
.ti -1c
.RI "\fBextract\fP ($arr, $prefix)"
.br
.ti -1c
.RI "\fBconstants\fP ($class, $prefix='')"
.br
.ti -1c
.RI "\fBhash\fP ($str)"
.br
.ti -1c
.RI "\fBbase64\fP ($data, $mime)"
.br
.ti -1c
.RI "\fBencode\fP ($str)"
.br
.ti -1c
.RI "\fBdecode\fP ($str)"
.br
.ti -1c
.RI "\fBrecursive\fP ($arg, $func, $stack=[])"
.br
.ti -1c
.RI "\fBclean\fP ($arg, $tags=NULL)"
.br
.ti -1c
.RI "\fBscrub\fP (&$var, $tags=NULL)"
.br
.ti -1c
.RI "\fBformat\fP ()"
.br
.ti -1c
.RI "\fBlanguage\fP ($code)"
.br
.ti -1c
.RI "\fBlexicon\fP ($path, $ttl=0)"
.br
.ti -1c
.RI "\fBserialize\fP ($arg)"
.br
.ti -1c
.RI "\fBunserialize\fP ($arg)"
.br
.ti -1c
.RI "\fBstatus\fP ($code)"
.br
.ti -1c
.RI "\fBexpire\fP ($secs=0)"
.br
.ti -1c
.RI "\fBagent\fP ()"
.br
.ti -1c
.RI "\fBajax\fP ()"
.br
.ti -1c
.RI "\fBip\fP ()"
.br
.ti -1c
.RI "\fBtrace\fP (array $trace=NULL, $\fBformat\fP=TRUE)"
.br
.ti -1c
.RI "\fBerror\fP ($code, $text='', array $\fBtrace\fP=NULL, $level=0)"
.br
.ti -1c
.RI "\fBmock\fP ($pattern, array $args=NULL, array $headers=NULL, $body=NULL)"
.br
.ti -1c
.RI "\fBroute\fP ($pattern, $handler, $ttl=0, $kbps=0)"
.br
.ti -1c
.RI "\fBreroute\fP ($url=NULL, $permanent=FALSE)"
.br
.ti -1c
.RI "\fBmap\fP ($url, $class, $ttl=0, $kbps=0)"
.br
.ti -1c
.RI "\fBredirect\fP ($pattern, $url, $permanent=TRUE)"
.br
.ti -1c
.RI "\fBblacklisted\fP ($\fBip\fP)"
.br
.ti -1c
.RI "\fBmask\fP ($pattern, $url=NULL)"
.br
.ti -1c
.RI "\fBrun\fP ()"
.br
.ti -1c
.RI "\fBuntil\fP ($func, $args=NULL, $timeout=60)"
.br
.ti -1c
.RI "\fBabort\fP ()"
.br
.ti -1c
.RI "\fBgrab\fP ($func, $args=NULL)"
.br
.ti -1c
.RI "\fBcall\fP ($func, $args=NULL, $hooks='')"
.br
.ti -1c
.RI "\fBchain\fP ($funcs, $args=NULL)"
.br
.ti -1c
.RI "\fBrelay\fP ($funcs, $args=NULL)"
.br
.ti -1c
.RI "\fBconfig\fP ($file, $allow=FALSE)"
.br
.ti -1c
.RI "\fBmutex\fP ($id, $func, $args=NULL)"
.br
.ti -1c
.RI "\fBread\fP ($file, $lf=FALSE)"
.br
.ti -1c
.RI "\fBwrite\fP ($file, $data, $append=FALSE)"
.br
.ti -1c
.RI "\fBhighlight\fP ($text)"
.br
.ti -1c
.RI "\fBdump\fP ($expr)"
.br
.ti -1c
.RI "\fBrel\fP ($url)"
.br
.ti -1c
.RI "\fBunload\fP ($cwd)"
.br
.ti -1c
.RI "\fBoffsetexists\fP ($key)"
.br
.ti -1c
.RI "\fBoffsetset\fP ($key, $val)"
.br
.ti -1c
.RI "& \fBoffsetget\fP ($key)"
.br
.ti -1c
.RI "\fBoffsetunset\fP ($key)"
.br
.ti -1c
.RI "\fB__isset\fP ($key)"
.br
.ti -1c
.RI "\fB__set\fP ($key, $val)"
.br
.ti -1c
.RI "& \fB__get\fP ($key)"
.br
.ti -1c
.RI "\fB__unset\fP ($key)"
.br
.ti -1c
.RI "\fB__call\fP ($key, $args)"
.br
.ti -1c
.RI "\fB__construct\fP ()"
.br
.RI "Bootstrap\&. "
.in -1c
.SS "Data Fields"

.in +1c
.ti -1c
.RI "const \fBGLOBALS\fP ='GET|POST|COOKIE|REQUEST|SESSION|FILES|SERVER|ENV'"
.br
.RI "Mapped PHP globals\&. "
.ti -1c
.RI "const \fBVERBS\fP ='GET|HEAD|POST|PUT|PATCH|DELETE|CONNECT'"
.br
.RI "HTTP verbs\&. "
.ti -1c
.RI "const \fBMODE\fP =0755"
.br
.RI "Default directory permissions\&. "
.ti -1c
.RI "const \fBCSS\fP ='code\&.css'"
.br
.RI "Syntax highlighting stylesheet\&. "
.ti -1c
.RI "\fB$init\fP"
.br
.RI "Initial settings\&. "
.ti -1c
.RI "\fB$languages\fP"
.br
.RI "Language lookup sequence\&. "
.ti -1c
.RI "\fB$fallback\fP ='en'"
.br
.RI "Default fallback language\&. "
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "const \fBPACKAGE\fP ='Fat\-Free Framework'"
.br
.ti -1c
.RI "const \fBVERSION\fP ='3\&.6\&.0\-Release'"
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "const \fBHTTP_100\fP ='Continue'"
.br
.ti -1c
.RI "const \fBHTTP_101\fP ='Switching Protocols'"
.br
.ti -1c
.RI "const \fBHTTP_200\fP ='OK'"
.br
.ti -1c
.RI "const \fBHTTP_201\fP ='Created'"
.br
.ti -1c
.RI "const \fBHTTP_202\fP ='Accepted'"
.br
.ti -1c
.RI "const \fBHTTP_203\fP ='Non\-Authorative Information'"
.br
.ti -1c
.RI "const \fBHTTP_204\fP ='No Content'"
.br
.ti -1c
.RI "const \fBHTTP_205\fP ='Reset Content'"
.br
.ti -1c
.RI "const \fBHTTP_206\fP ='Partial Content'"
.br
.ti -1c
.RI "const \fBHTTP_300\fP ='Multiple Choices'"
.br
.ti -1c
.RI "const \fBHTTP_301\fP ='Moved Permanently'"
.br
.ti -1c
.RI "const \fBHTTP_302\fP ='Found'"
.br
.ti -1c
.RI "const \fBHTTP_303\fP ='See Other'"
.br
.ti -1c
.RI "const \fBHTTP_304\fP ='Not Modified'"
.br
.ti -1c
.RI "const \fBHTTP_305\fP ='Use Proxy'"
.br
.ti -1c
.RI "const \fBHTTP_307\fP ='Temporary Redirect'"
.br
.ti -1c
.RI "const \fBHTTP_400\fP ='Bad Request'"
.br
.ti -1c
.RI "const \fBHTTP_401\fP ='Unauthorized'"
.br
.ti -1c
.RI "const \fBHTTP_402\fP ='Payment Required'"
.br
.ti -1c
.RI "const \fBHTTP_403\fP ='Forbidden'"
.br
.ti -1c
.RI "const \fBHTTP_404\fP ='Not Found'"
.br
.ti -1c
.RI "const \fBHTTP_405\fP ='Method Not Allowed'"
.br
.ti -1c
.RI "const \fBHTTP_406\fP ='Not Acceptable'"
.br
.ti -1c
.RI "const \fBHTTP_407\fP ='Proxy Authentication Required'"
.br
.ti -1c
.RI "const \fBHTTP_408\fP ='Request Timeout'"
.br
.ti -1c
.RI "const \fBHTTP_409\fP ='Conflict'"
.br
.ti -1c
.RI "const \fBHTTP_410\fP ='Gone'"
.br
.ti -1c
.RI "const \fBHTTP_411\fP ='Length Required'"
.br
.ti -1c
.RI "const \fBHTTP_412\fP ='Precondition Failed'"
.br
.ti -1c
.RI "const \fBHTTP_413\fP ='Request Entity Too Large'"
.br
.ti -1c
.RI "const \fBHTTP_414\fP ='Request\-URI Too Long'"
.br
.ti -1c
.RI "const \fBHTTP_415\fP ='Unsupported Media Type'"
.br
.ti -1c
.RI "const \fBHTTP_416\fP ='Requested Range Not Satisfiable'"
.br
.ti -1c
.RI "const \fBHTTP_417\fP ='Expectation Failed'"
.br
.ti -1c
.RI "const \fBHTTP_500\fP ='Internal Server Error'"
.br
.ti -1c
.RI "const \fBHTTP_501\fP ='Not Implemented'"
.br
.ti -1c
.RI "const \fBHTTP_502\fP ='Bad Gateway'"
.br
.ti -1c
.RI "const \fBHTTP_503\fP ='Service Unavailable'"
.br
.ti -1c
.RI "const \fBHTTP_504\fP ='Gateway Timeout'"
.br
.ti -1c
.RI "const \fBHTTP_505\fP ='HTTP Version Not Supported'"
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "const \fBREQ_SYNC\fP =1"
.br
.ti -1c
.RI "const \fBREQ_AJAX\fP =2"
.br
.ti -1c
.RI "const \fBREQ_CLI\fP =4"
.br
.in -1c
.in -1c
.PP
.RI "\fB\fP"
.br

.in +1c
.in +1c
.ti -1c
.RI "const \fBE_Pattern\fP ='Invalid routing pattern: %s'"
.br
.ti -1c
.RI "const \fBE_Named\fP ='Named \fBroute\fP does not exist: %s'"
.br
.ti -1c
.RI "const \fBE_Fatal\fP ='Fatal error: %s'"
.br
.ti -1c
.RI "const \fBE_Open\fP ='Unable to open %s'"
.br
.ti -1c
.RI "const \fBE_Routes\fP ='No routes specified'"
.br
.ti -1c
.RI "const \fBE_Class\fP ='Invalid class %s'"
.br
.ti -1c
.RI "const \fBE_Method\fP ='Invalid method %s'"
.br
.ti -1c
.RI "const \fBE_Hive\fP ='Invalid \fBhive\fP key %s'"
.br
.in -1c
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBautoload\fP ($class)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
\fBBase\fP structure\&. 
.PP
Definition at line 43 of file base\&.php\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "__construct ()"

.PP
Bootstrap\&. 
.PP
Definition at line 2128 of file base\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "__call ( $key,  $args)"
Call function identified by hive key 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$args\fP array 
.RE
.PP

.PP
Definition at line 2119 of file base\&.php\&.
.SS "& __get ( $key)"
Alias for \fBoffsetget()\fP 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 2099 of file base\&.php\&.
.SS "__isset ( $key)"
Alias for \fBoffsetexists()\fP 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 2080 of file base\&.php\&.
.SS "__set ( $key,  $val)"
Alias for \fBoffsetset()\fP 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP mixed 
.RE
.PP

.PP
Definition at line 2090 of file base\&.php\&.
.SS "__unset ( $key)"
Alias for \fBoffsetunset()\fP 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 2109 of file base\&.php\&.
.SS "abort ()"
Disconnect HTTP client 
.PP
Definition at line 1694 of file base\&.php\&.
.SS "agent ()"
Return HTTP user agent 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1134 of file base\&.php\&.
.SS "ajax ()"
Return TRUE if XMLHttpRequest detected 
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP

.PP
Definition at line 1148 of file base\&.php\&.
.SS "alias ( $name,  $params = \fC[]\fP,  $query = \fCNULL\fP)"
Assemble url from alias name 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$name\fP string 
.br
\fI$params\fP array|string 
.br
\fI$query\fP string|array 
.RE
.PP

.PP
Definition at line 193 of file base\&.php\&.
.SS "autoload ( $class)\fC [protected]\fP"
Namespace-aware class autoloader 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$class\fP string 
.RE
.PP

.PP
Definition at line 2005 of file base\&.php\&.
.SS "base64 ( $data,  $mime)"
Return Base64-encoded equivalent 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$data\fP string 
.br
\fI$mime\fP string 
.RE
.PP

.PP
Definition at line 776 of file base\&.php\&.
.SS "blacklisted ( $ip)"
Return TRUE if IPv4 address exists in DNSBL 
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$ip\fP string 
.RE
.PP

.PP
Definition at line 1433 of file base\&.php\&.
.SS "build ( $url,  $args = \fC[]\fP)"
Replace tokenized URL with available token values 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$url\fP array|string 
.br
\fI$args\fP array 
.RE
.PP

.PP
Definition at line 159 of file base\&.php\&.
.SS "call ( $func,  $args = \fCNULL\fP,  $hooks = \fC''\fP)"
Execute callback/hooks (supports 'class->method' format) 
.PP
\fBReturns:\fP
.RS 4
mixed|FALSE 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$func\fP callback 
.br
\fI$args\fP mixed 
.br
\fI$hooks\fP string 
.RE
.PP

.PP
Definition at line 1742 of file base\&.php\&.
.SS "camelcase ( $str)"
Convert snakecase string to camelcase 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.RE
.PP

.PP
Definition at line 706 of file base\&.php\&.
.SS "chain ( $funcs,  $args = \fCNULL\fP)"
Execute specified callbacks in succession; Apply same arguments to all callbacks 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$funcs\fP array|string 
.br
\fI$args\fP mixed 
.RE
.PP

.PP
Definition at line 1794 of file base\&.php\&.
.SS "checked ( $key)"
Return TRUE if hive variable is 'on' 
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 481 of file base\&.php\&.
.SS "clean ( $arg,  $tags = \fCNULL\fP)"
Remove HTML tags (except those enumerated) and non-printable characters to mitigate XSS/code injection attacks 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$arg\fP mixed 
.br
\fI$tags\fP string 
.RE
.PP

.PP
Definition at line 841 of file base\&.php\&.
.SS "clear ( $key)"
Unset hive key 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 432 of file base\&.php\&.
.SS "compile ( $str)"
Convert JS-style token to PHP expression 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.RE
.PP

.PP
Definition at line 229 of file base\&.php\&.
.SS "concat ( $key,  $val)"
Concatenate string to hive string variable 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP string 
.RE
.PP

.PP
Definition at line 539 of file base\&.php\&.
.SS "config ( $file,  $allow = \fCFALSE\fP)"
Configure framework according to \&.ini-style file settings; If optional 2nd arg is provided, template strings are interpreted 
.PP
\fBReturns:\fP
.RS 4
object 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$file\fP string 
.br
\fI$allow\fP bool 
.RE
.PP

.PP
Definition at line 1821 of file base\&.php\&.
.SS "constants ( $class,  $prefix = \fC''\fP)"
Convert class constants to array 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$class\fP object|string 
.br
\fI$prefix\fP string 
.RE
.PP

.PP
Definition at line 755 of file base\&.php\&.
.SS "copy ( $src,  $dst)"
Copy contents of hive variable to another 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$src\fP string 
.br
\fI$dst\fP string 
.RE
.PP

.PP
Definition at line 528 of file base\&.php\&.
.SS "csv (array $args)"
Flatten array values and return as CSV string 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$args\fP array 
.RE
.PP

.PP
Definition at line 696 of file base\&.php\&.
.SS "decode ( $str)"
Convert HTML entities back to characters 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.RE
.PP

.PP
Definition at line 795 of file base\&.php\&.
.SS "devoid ( $key, & $val = \fCNULL\fP)"
Return TRUE if hive key is empty and not cached 
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP mixed 
.RE
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP

.PP
Definition at line 333 of file base\&.php\&.
.SS "dump ( $expr)"
Dump expression with syntax highlighting 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$expr\fP mixed 
.RE
.PP

.PP
Definition at line 1986 of file base\&.php\&.
.SS "encode ( $str)"
Convert special characters to HTML entities 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.RE
.PP

.PP
Definition at line 785 of file base\&.php\&.
.SS "error ( $code,  $text = \fC''\fP, array $trace = \fCNULL\fP,  $level = \fC0\fP)"
\fBLog\fP error; Execute ONERROR handler if defined, else display default error page (HTML for synchronous requests, JSON string for AJAX requests) 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$code\fP int 
.br
\fI$text\fP string 
.br
\fI$trace\fP array 
.br
\fI$level\fP int 
.RE
.PP

.PP
Definition at line 1222 of file base\&.php\&.
.SS "exists ( $key, & $val = \fCNULL\fP)"
Return TRUE if hive key is set (or return timestamp and TTL if cached) 
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP mixed 
.RE
.PP

.PP
Definition at line 320 of file base\&.php\&.
.SS "expire ( $secs = \fC0\fP)"
Send cache metadata to HTTP client 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$secs\fP int 
.RE
.PP

.PP
Definition at line 1107 of file base\&.php\&.
.SS "extend ( $key,  $src,  $keep = \fCFALSE\fP)"
Extend hive array variable with default values from $src 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$src\fP string|array 
.br
\fI$keep\fP bool 
.RE
.PP

.PP
Definition at line 624 of file base\&.php\&.
.SS "extract ( $arr,  $prefix)"
Extract values of array whose keys start with the given prefix 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$arr\fP array 
.br
\fI$prefix\fP string 
.RE
.PP

.PP
Definition at line 741 of file base\&.php\&.
.SS "fixslashes ( $str)"
Convert backslashes to slashes 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.RE
.PP

.PP
Definition at line 639 of file base\&.php\&.
.SS "flip ( $key)"
Swap keys and values of hive array variable 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 551 of file base\&.php\&.
.SS "format ()"
Return locale-aware formatted string 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 868 of file base\&.php\&.
.SS "get ( $key,  $args = \fCNULL\fP)"
Retrieve contents of hive key 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$args\fP string|array 
.RE
.PP

.PP
Definition at line 413 of file base\&.php\&.
.SS "grab ( $func,  $args = \fCNULL\fP)"
Grab the real route handler behind the string expression 
.PP
\fBReturns:\fP
.RS 4
string|array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$func\fP string 
.br
\fI$args\fP array 
.RE
.PP

.PP
Definition at line 1715 of file base\&.php\&.
.SS "hash ( $str)"
Generate 64bit/base36 hash 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP 
.RE
.PP

.PP
Definition at line 765 of file base\&.php\&.
.SS "highlight ( $text)"
Apply syntax highlighting 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$text\fP string 
.RE
.PP

.PP
Definition at line 1959 of file base\&.php\&.
.SS "hive ()"
Publish hive contents 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP

.PP
Definition at line 518 of file base\&.php\&.
.SS "ip ()"
Sniff IP address 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP

.PP
Definition at line 1158 of file base\&.php\&.
.SS "language ( $code)"
Assign/auto-detect language 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$code\fP string 
.RE
.PP

.PP
Definition at line 986 of file base\&.php\&.
.SS "lexicon ( $path,  $ttl = \fC0\fP)"
Return lexicon entries 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$path\fP string 
.br
\fI$ttl\fP int 
.RE
.PP

.PP
Definition at line 1025 of file base\&.php\&.
.SS "map ( $url,  $class,  $ttl = \fC0\fP,  $kbps = \fC0\fP)"
Provide ReST interface by mapping HTTP verb to class method 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$url\fP string 
.br
\fI$class\fP string|object 
.br
\fI$ttl\fP int 
.br
\fI$kbps\fP int 
.RE
.PP

.PP
Definition at line 1397 of file base\&.php\&.
.SS "mask ( $pattern,  $url = \fCNULL\fP)"
Applies the specified URL mask and returns parameterized matches 
.PP
\fBReturns:\fP
.RS 4
$args array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP string 
.br
\fI$url\fP string|NULL 
.RE
.PP

.PP
Definition at line 1457 of file base\&.php\&.
.SS "merge ( $key,  $src,  $keep = \fCFALSE\fP)"
Merge array with hive array variable 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$src\fP string|array 
.br
\fI$keep\fP bool 
.RE
.PP

.PP
Definition at line 607 of file base\&.php\&.
.SS "mock ( $pattern, array $args = \fCNULL\fP, array $headers = \fCNULL\fP,  $body = \fCNULL\fP)"
Mock HTTP request 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP string 
.br
\fI$args\fP array 
.br
\fI$headers\fP array 
.br
\fI$body\fP string 
.RE
.PP

.PP
Definition at line 1278 of file base\&.php\&.
.SS "mset (array $vars,  $prefix = \fC''\fP,  $ttl = \fC0\fP)"
Multi-variable assignment using associative array 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$vars\fP array 
.br
\fI$prefix\fP string 
.br
\fI$ttl\fP int 
.RE
.PP

.PP
Definition at line 509 of file base\&.php\&.
.SS "mutex ( $id,  $func,  $args = \fCNULL\fP)"
Create mutex, invoke callback then drop ownership when done 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$id\fP string 
.br
\fI$func\fP callback 
.br
\fI$args\fP mixed 
.RE
.PP

.PP
Definition at line 1915 of file base\&.php\&.
.SS "offsetexists ( $key)"
Convenience method for checking hive key 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 2042 of file base\&.php\&.
.SS "& offsetget ( $key)"
Convenience method for retrieving hive value 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 2061 of file base\&.php\&.
.SS "offsetset ( $key,  $val)"
Convenience method for assigning hive value 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP scalar 
.RE
.PP

.PP
Definition at line 2052 of file base\&.php\&.
.SS "offsetunset ( $key)"
Convenience method for removing hive key 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 2071 of file base\&.php\&.
.SS "parse ( $str)"
Parse string containing key-value pairs 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.RE
.PP

.PP
Definition at line 209 of file base\&.php\&.
.SS "pop ( $key)"
Remove last element of hive array variable 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 573 of file base\&.php\&.
.SS "push ( $key,  $val)"
Add element to the end of hive array variable 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP mixed 
.RE
.PP

.PP
Definition at line 562 of file base\&.php\&.
.SS "read ( $file,  $lf = \fCFALSE\fP)"
Read file (with option to apply Unix LF as standard line ending) 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$file\fP string 
.br
\fI$lf\fP bool 
.RE
.PP

.PP
Definition at line 1938 of file base\&.php\&.
.SS "recursive ( $arg,  $func,  $stack = \fC[]\fP)"
Invoke callback recursively for all data types 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$arg\fP mixed 
.br
\fI$func\fP callback 
.br
\fI$stack\fP array 
.RE
.PP

.PP
Definition at line 806 of file base\&.php\&.
.SS "redirect ( $pattern,  $url,  $permanent = \fCTRUE\fP)"
Redirect a route to another URL 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP string|array 
.br
\fI$url\fP string 
.br
\fI$permanent\fP bool 
.RE
.PP

.PP
Definition at line 1417 of file base\&.php\&.
.SS "& ref ( $key,  $add = \fCTRUE\fP, & $var = \fCNULL\fP)"
Get hive key reference/contents; Add non-existent hive keys, array elements, and object properties by default 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$add\fP bool 
.br
\fI$var\fP mixed 
.RE
.PP

.PP
Definition at line 268 of file base\&.php\&.
.SS "rel ( $url)"
Return path (and query parameters) relative to the base directory 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$url\fP string 
.RE
.PP

.PP
Definition at line 1995 of file base\&.php\&.
.SS "relay ( $funcs,  $args = \fCNULL\fP)"
Execute specified callbacks in succession; Relay result of previous callback as argument to the next callback 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$funcs\fP array|string 
.br
\fI$args\fP mixed 
.RE
.PP

.PP
Definition at line 1808 of file base\&.php\&.
.SS "reroute ( $url = \fCNULL\fP,  $permanent = \fCFALSE\fP)"
Reroute to specified URI 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$url\fP array|string 
.br
\fI$permanent\fP bool 
.RE
.PP

.PP
Definition at line 1360 of file base\&.php\&.
.SS "route ( $pattern,  $handler,  $ttl = \fC0\fP,  $kbps = \fC0\fP)"
Bind handler to route pattern 
.PP
\fBReturns:\fP
.RS 4
NULL 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$pattern\fP string|array 
.br
\fI$handler\fP callback 
.br
\fI$ttl\fP int 
.br
\fI$kbps\fP int 
.RE
.PP

.PP
Definition at line 1326 of file base\&.php\&.
.SS "run ()"
Match routes against incoming URI 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP

.PP
Definition at line 1493 of file base\&.php\&.
.SS "scrub (& $var,  $tags = \fCNULL\fP)"
Similar to \fBclean()\fP, except that variable is passed by reference 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$var\fP mixed 
.br
\fI$tags\fP string 
.RE
.PP

.PP
Definition at line 860 of file base\&.php\&.
.SS "serialize ( $arg)"
Return string representation of PHP value 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$arg\fP mixed 
.RE
.PP

.PP
Definition at line 1067 of file base\&.php\&.
.SS "set ( $key,  $val,  $ttl = \fC0\fP)"
Bind value to hive key 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP mixed 
.br
\fI$ttl\fP int 
.RE
.PP

.PP
Definition at line 347 of file base\&.php\&.
.SS "shift ( $key)"
Remove first element of hive array variable 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 595 of file base\&.php\&.
.SS "sign ( $num)"
Return -1 if specified number is negative, 0 if zero, or 1 if the number is positive 
.PP
\fBReturns:\fP
.RS 4
int 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$num\fP mixed 
.RE
.PP

.PP
Definition at line 731 of file base\&.php\&.
.SS "snakecase ( $str)"
Convert camelcase string to snakecase 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.RE
.PP

.PP
Definition at line 721 of file base\&.php\&.
.SS "split ( $str,  $noempty = \fCTRUE\fP)"
Split comma-, semi-colon, or pipe-separated string 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$str\fP string 
.br
\fI$noempty\fP bool 
.RE
.PP

.PP
Definition at line 649 of file base\&.php\&.
.SS "status ( $code)"
Send HTTP status header; Return text equivalent of status code 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$code\fP int 
.RE
.PP

.PP
Definition at line 1095 of file base\&.php\&.
.SS "stringify ( $arg, array $stack = \fCNULL\fP)"
Convert PHP expression/value to compressed exportable string 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$arg\fP mixed 
.br
\fI$stack\fP array 
.RE
.PP

.PP
Definition at line 660 of file base\&.php\&.
.SS "sync ( $key)"
Sync PHP global with corresponding hive key 
.PP
\fBReturns:\fP
.RS 4
array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 139 of file base\&.php\&.
.SS "trace (array $trace = \fCNULL\fP,  $format = \fCTRUE\fP)"
Return filtered stack trace as a formatted string (or array) 
.PP
\fBReturns:\fP
.RS 4
string|array 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$trace\fP array|NULL 
.br
\fI$format\fP bool 
.RE
.PP

.PP
Definition at line 1174 of file base\&.php\&.
.SS "unload ( $cwd)"
Execute framework/application shutdown sequence 
.PP
\fBParameters:\fP
.RS 4
\fI$cwd\fP string 
.RE
.PP

.PP
Definition at line 2023 of file base\&.php\&.
.SS "unserialize ( $arg)"
Return PHP value derived from string 
.PP
\fBReturns:\fP
.RS 4
string 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$arg\fP mixed 
.RE
.PP

.PP
Definition at line 1081 of file base\&.php\&.
.SS "unshift ( $key,  $val)"
Add element to the beginning of hive array variable 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$key\fP string 
.br
\fI$val\fP mixed 
.RE
.PP

.PP
Definition at line 584 of file base\&.php\&.
.SS "until ( $func,  $args = \fCNULL\fP,  $timeout = \fC60\fP)"
Loop until callback returns TRUE (for long polling) 
.PP
\fBReturns:\fP
.RS 4
mixed 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$func\fP callback 
.br
\fI$args\fP array 
.br
\fI$timeout\fP int 
.RE
.PP

.PP
Definition at line 1659 of file base\&.php\&.
.SS "visible ( $obj,  $key)"
Return TRUE if property has public visibility 
.PP
\fBReturns:\fP
.RS 4
bool 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$obj\fP object 
.br
\fI$key\fP string 
.RE
.PP

.PP
Definition at line 492 of file base\&.php\&.
.SS "write ( $file,  $data,  $append = \fCFALSE\fP)"
Exclusive file write 
.PP
\fBReturns:\fP
.RS 4
int|FALSE 
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$file\fP string 
.br
\fI$data\fP mixed 
.br
\fI$append\fP bool 
.RE
.PP

.PP
Definition at line 1950 of file base\&.php\&.
.SH "Field Documentation"
.PP 
.SS "$fallback ='en'"

.PP
Default fallback language\&. 
.PP
Definition at line 132 of file base\&.php\&.
.SS "$init"

.PP
Initial settings\&. 
.PP
Definition at line 126 of file base\&.php\&.
.SS "$languages"

.PP
Language lookup sequence\&. 
.PP
Definition at line 126 of file base\&.php\&.
.SS "const CSS ='code\&.css'"

.PP
Syntax highlighting stylesheet\&. 
.PP
Definition at line 103 of file base\&.php\&.
.SS "const E_Class ='Invalid class %s'"

.PP
Definition at line 119 of file base\&.php\&.
.SS "const E_Fatal ='Fatal error: %s'"

.PP
Definition at line 116 of file base\&.php\&.
.SS "const E_Hive ='Invalid \fBhive\fP key %s'"

.PP
Definition at line 121 of file base\&.php\&.
.SS "const E_Method ='Invalid method %s'"

.PP
Definition at line 120 of file base\&.php\&.
.SS "const E_Named ='Named \fBroute\fP does not exist: %s'"

.PP
Definition at line 115 of file base\&.php\&.
.SS "const E_Open ='Unable to open %s'"

.PP
Definition at line 117 of file base\&.php\&.
.SS "const E_Pattern ='Invalid routing pattern: %s'"

.PP
Definition at line 114 of file base\&.php\&.
.SS "const E_Routes ='No routes specified'"

.PP
Definition at line 118 of file base\&.php\&.
.SS "const GLOBALS ='GET|POST|COOKIE|REQUEST|SESSION|FILES|SERVER|ENV'"

.PP
Mapped PHP globals\&. 
.PP
Definition at line 97 of file base\&.php\&.
.SS "const HTTP_100 ='Continue'"

.PP
Definition at line 53 of file base\&.php\&.
.SS "const HTTP_101 ='Switching Protocols'"

.PP
Definition at line 54 of file base\&.php\&.
.SS "const HTTP_200 ='OK'"

.PP
Definition at line 55 of file base\&.php\&.
.SS "const HTTP_201 ='Created'"

.PP
Definition at line 56 of file base\&.php\&.
.SS "const HTTP_202 ='Accepted'"

.PP
Definition at line 57 of file base\&.php\&.
.SS "const HTTP_203 ='Non\-Authorative Information'"

.PP
Definition at line 58 of file base\&.php\&.
.SS "const HTTP_204 ='No Content'"

.PP
Definition at line 59 of file base\&.php\&.
.SS "const HTTP_205 ='Reset Content'"

.PP
Definition at line 60 of file base\&.php\&.
.SS "const HTTP_206 ='Partial Content'"

.PP
Definition at line 61 of file base\&.php\&.
.SS "const HTTP_300 ='Multiple Choices'"

.PP
Definition at line 62 of file base\&.php\&.
.SS "const HTTP_301 ='Moved Permanently'"

.PP
Definition at line 63 of file base\&.php\&.
.SS "const HTTP_302 ='Found'"

.PP
Definition at line 64 of file base\&.php\&.
.SS "const HTTP_303 ='See Other'"

.PP
Definition at line 65 of file base\&.php\&.
.SS "const HTTP_304 ='Not Modified'"

.PP
Definition at line 66 of file base\&.php\&.
.SS "const HTTP_305 ='Use Proxy'"

.PP
Definition at line 67 of file base\&.php\&.
.SS "const HTTP_307 ='Temporary Redirect'"

.PP
Definition at line 68 of file base\&.php\&.
.SS "const HTTP_400 ='Bad Request'"

.PP
Definition at line 69 of file base\&.php\&.
.SS "const HTTP_401 ='Unauthorized'"

.PP
Definition at line 70 of file base\&.php\&.
.SS "const HTTP_402 ='Payment Required'"

.PP
Definition at line 71 of file base\&.php\&.
.SS "const HTTP_403 ='Forbidden'"

.PP
Definition at line 72 of file base\&.php\&.
.SS "const HTTP_404 ='Not Found'"

.PP
Definition at line 73 of file base\&.php\&.
.SS "const HTTP_405 ='Method Not Allowed'"

.PP
Definition at line 74 of file base\&.php\&.
.SS "const HTTP_406 ='Not Acceptable'"

.PP
Definition at line 75 of file base\&.php\&.
.SS "const HTTP_407 ='Proxy Authentication Required'"

.PP
Definition at line 76 of file base\&.php\&.
.SS "const HTTP_408 ='Request Timeout'"

.PP
Definition at line 77 of file base\&.php\&.
.SS "const HTTP_409 ='Conflict'"

.PP
Definition at line 78 of file base\&.php\&.
.SS "const HTTP_410 ='Gone'"

.PP
Definition at line 79 of file base\&.php\&.
.SS "const HTTP_411 ='Length Required'"

.PP
Definition at line 80 of file base\&.php\&.
.SS "const HTTP_412 ='Precondition Failed'"

.PP
Definition at line 81 of file base\&.php\&.
.SS "const HTTP_413 ='Request Entity Too Large'"

.PP
Definition at line 82 of file base\&.php\&.
.SS "const HTTP_414 ='Request\-URI Too Long'"

.PP
Definition at line 83 of file base\&.php\&.
.SS "const HTTP_415 ='Unsupported Media Type'"

.PP
Definition at line 84 of file base\&.php\&.
.SS "const HTTP_416 ='Requested Range Not Satisfiable'"

.PP
Definition at line 85 of file base\&.php\&.
.SS "const HTTP_417 ='Expectation Failed'"

.PP
Definition at line 86 of file base\&.php\&.
.SS "const HTTP_500 ='Internal Server Error'"

.PP
Definition at line 87 of file base\&.php\&.
.SS "const HTTP_501 ='Not Implemented'"

.PP
Definition at line 88 of file base\&.php\&.
.SS "const HTTP_502 ='Bad Gateway'"

.PP
Definition at line 89 of file base\&.php\&.
.SS "const HTTP_503 ='Service Unavailable'"

.PP
Definition at line 90 of file base\&.php\&.
.SS "const HTTP_504 ='Gateway Timeout'"

.PP
Definition at line 91 of file base\&.php\&.
.SS "const HTTP_505 ='HTTP Version Not Supported'"

.PP
Definition at line 92 of file base\&.php\&.
.SS "const MODE =0755"

.PP
Default directory permissions\&. 
.PP
Definition at line 101 of file base\&.php\&.
.SS "const PACKAGE ='Fat\-Free Framework'"

.PP
Definition at line 47 of file base\&.php\&.
.SS "const REQ_AJAX =2"

.PP
Definition at line 108 of file base\&.php\&.
.SS "const REQ_CLI =4"

.PP
Definition at line 109 of file base\&.php\&.
.SS "const REQ_SYNC =1"

.PP
Definition at line 107 of file base\&.php\&.
.SS "const VERBS ='GET|HEAD|POST|PUT|PATCH|DELETE|CONNECT'"

.PP
HTTP verbs\&. 
.PP
Definition at line 99 of file base\&.php\&.
.SS "const VERSION ='3\&.6\&.0\-Release'"

.PP
Definition at line 48 of file base\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Fat-Free Framework from the source code\&.
